// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int      @id @default(autoincrement())
  name               String
  surname            String?
  email              String   @unique
  password           String
  role               String?
  course             String?
  active             Boolean  @default(true)
  accepNotifications Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  Offerts Offert[]
  Rate    Rate[]
}

model Offert {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  active        Boolean  @default(true)
  contanctEmail String
  location      String
  published     DateTime @default(now())
  expired       DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  idcategory Int?
  category   Category? @relation(fields: [idcategory], references: [id])

  idUserCreator Int
  userCreator   User   @relation(fields: [idUserCreator], references: [id])
  Rate          Rate[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  offerts Offert[]
}

model Rate {
  idUser   Int
  idOffert Int
  value    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [idUser], references: [id])
  offert Offert @relation(fields: [idOffert], references: [id])

  @@id([idUser, idOffert])
}

